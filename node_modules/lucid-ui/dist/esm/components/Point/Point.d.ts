import React from 'react';
import PropTypes from 'prop-types';
import { StandardProps } from '../../util/component-types';
export declare enum Kind {
    Circle = 0,
    Square = 1,
    TriangleUp = 2,
    TriangleDown = 3,
    Diamond = 4
}
export interface IPointProps extends StandardProps, React.SVGProps<SVGPathElement> {
    hasStroke: boolean;
    kind: Kind;
    color: string;
    scale: number;
    x: number;
    y: number;
}
export declare const Point: {
    (props: IPointProps): React.ReactElement;
    defaultProps: {
        x: number;
        y: number;
        kind: number;
        color: string;
        hasStroke: boolean;
        scale: number;
    };
    displayName: string;
    peek: {
        description: string;
        categories: string[];
    };
    propTypes: {
        /**
                Passed through to the root element.
            */
        style: PropTypes.Requireable<object>;
        /**
                Appended to the component-specific class names set on the root element.
            */
        className: PropTypes.Requireable<string>;
        /**
                Determines if the point has a white stroke around it.
            */
        hasStroke: PropTypes.Requireable<boolean>;
        /**
                x coordinate
            */
        x: PropTypes.Requireable<number>;
        /**
                y coordinate
            */
        y: PropTypes.Requireable<number>;
        /**
                Zero-based set of shapes. It's recommended that you pass the index of
                your array for shapes.
            */
        kind: PropTypes.Requireable<number>;
        /**
                Strings should match an existing color class unless they start with a '#'
                for specific colors. E.g.:
    
                - \`COLOR_0\`
                - \`COLOR_GOOD\`
                - \`'#123abc'\`
            */
        color: PropTypes.Requireable<string>;
        /**
                Scale up the size of the symbol. 2 would be double the original size.
            */
        scale: PropTypes.Requireable<number>;
    };
};
export default Point;
//# sourceMappingURL=Point.d.ts.map