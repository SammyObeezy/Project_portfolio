/* eslint-disable react/prop-types */
import _ from 'lodash';
import React from 'react';
import PropTypes from 'prop-types';
import { lucidClassNames } from '../../util/style-helpers';
import { findTypes } from '../../util/component-types';
const cx = lucidClassNames.bind('&-Breadcrumb');
const { any, node } = PropTypes;
const BreadcrumbItem = (_props) => null;
BreadcrumbItem.displayName = 'Breadcrumb.Item';
BreadcrumbItem.peek = {
    description: `Renders a \`li\``,
};
BreadcrumbItem.propName = 'Item';
BreadcrumbItem.propTypes = {
    children: node,
};
export const Breadcrumb = (props) => {
    const { className, ...passThroughs } = props;
    const items = findTypes(props, Breadcrumb.Item);
    const initialItems = _.initial(items);
    const lastItem = _.last(items);
    return (React.createElement("nav", { ...passThroughs, className: cx('&', className) }, !_.isEmpty(items) ? (React.createElement("ul", { className: cx('&-List') },
        _.map(initialItems, ({ props, key }) => (React.createElement("li", { ...props, key: key, className: cx('&-Item', className) },
            props.children,
            React.createElement("span", { className: cx('&-BreadcrumbSeparator') },
                React.createElement("span", null),
                React.createElement("span", null))))),
        React.createElement("li", { ...lastItem.props, key: lastItem.key, className: cx('&-Item', lastItem.props.className) }))) : null));
};
Breadcrumb.displayName = 'Breadcrumb';
Breadcrumb.peek = {
    description: `A navigation component to show a user's place in a navigation hierarchy and provide links to return to higher points in that hierarchy.`,
    categories: ['navigation'],
};
Breadcrumb.propTypes = {
    /**
        All children should be \`Breadcrumb.Item\`s. Others are ignored.
    */
    children: node,
    /**
        Appended to the component-specific class names set on the root element.
        Value is run through the \`classnames\` library.
    */
    className: any,
    /**
        A child element that renders a \`li\`.
    */
    Item: node,
};
Breadcrumb.Item = BreadcrumbItem;
export default Breadcrumb;
//# sourceMappingURL=Breadcrumb.js.map