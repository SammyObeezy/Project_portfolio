import _ from 'lodash';
import React, { useState } from 'react';
import { ChatIcon } from '../Icon/ChatIcon/ChatIcon';
import { Button } from '../Button/Button';
import { Banner } from './Banner';
export default {
    title: 'communication/Banner',
    component: Banner,
    parameters: {
        docs: {
            description: {
                component: Banner.peek.description,
            },
        },
    },
    args: Banner.defaultProps,
};
export const Basic = (args) => (React.createElement(Banner, { ...args }, "Default"));
export const Stateful = (args) => {
    const [isClosed, setIsClosed] = useState(false);
    return (React.createElement("div", null,
        React.createElement(Button, { ...Button.defaultProps, onClick: () => setIsClosed(!isClosed), style: { marginBottom: 8 } }, "Open/Close"),
        React.createElement("br", null),
        React.createElement(Banner, { ...args, isClosed: isClosed, onClose: () => setIsClosed(true) }, "Default")));
};
export const Stateless = (args) => {
    const kinds = [
        { label: 'Default', value: undefined },
        { label: 'Success', value: 'success' },
        { label: 'Warning', value: 'warning' },
        { label: 'Danger', value: 'danger' },
        { label: 'Info', value: 'info' },
    ];
    return (React.createElement("div", null,
        _.map(kinds, ({ label, value }) => (React.createElement(React.Fragment, { key: `stateless-${label}` },
            React.createElement("div", null,
                React.createElement(Banner, { ...args, kind: value, style: { marginBottom: 8 } }, label),
                React.createElement(Banner, { ...args, kind: value, isCloseable: false, style: { marginBottom: 8 } },
                    label,
                    " -- No Close ",
                    String.fromCharCode(0x00d7)))))),
        React.createElement("div", null,
            React.createElement(Banner, { ...args, kind: 'danger', icon: React.createElement(ChatIcon, null), style: { marginBottom: 8 } }, "Has Icon")),
        React.createElement("div", null,
            React.createElement(Banner, { ...args, isFilled: false, style: { marginBottom: 8 } },
                React.createElement("div", null, "Sit totam voluptas error dolorum ullam Quo ipsam esse amet mollitia consequuntur Cumque cum nisi porro cumque sit nisi Facilis placeat suscipit earum blanditiis eveniet Earum dolor voluptates perferendis quis"),
                React.createElement("div", null, "Adipisicing culpa atque totam quidem dicta consequatur fugiat quaerat Facilis cupiditate amet nam in perferendis Veritatis iusto molestiae illum doloribus deserunt Odit autem obcaecati dolores ad incidunt? Ipsa eveniet modi."),
                React.createElement("div", null, "Lorem sit explicabo vitae illum labore Nostrum inventore dolor nisi deserunt voluptatem Voluptas itaque nesciunt omnis necessitatibus asperiores! Eius error ab consequatur necessitatibus repudiandae quibusdam Odio consequuntur at necessitatibus at"),
                React.createElement("div", null,
                    React.createElement("a", { href: '#' }, "Click Me")))),
        _.map(kinds, ({ label, value }) => (React.createElement(React.Fragment, { key: `stateless-outline-${label}` },
            React.createElement("div", null,
                React.createElement(Banner, { ...args, kind: value, isFilled: false, style: { marginBottom: 8 } },
                    React.createElement("div", null,
                        label,
                        " -- Outline"),
                    React.createElement("div", null, "Outline banners are for messages with multi-line content.")))))),
        React.createElement("div", null,
            React.createElement(Banner, { ...args, kind: 'danger', icon: React.createElement(ChatIcon, null), isFilled: false, style: { marginBottom: 8 } },
                React.createElement("div", null, "Has Icon -- Outline"),
                React.createElement("div", null, "Outline banners are for messages with multi-line content.")))));
};
export const Small = (args) => {
    const kinds = [
        { label: 'Default', value: undefined },
        { label: 'Success', value: 'success' },
        { label: 'Warning', value: 'warning' },
        { label: 'Danger', value: 'danger' },
        { label: 'Info', value: 'info' },
    ];
    return (React.createElement("div", null,
        _.map(kinds, ({ label, value }) => (React.createElement(React.Fragment, { key: `sm-${label}` },
            React.createElement("div", null,
                React.createElement(Banner, { ...args, isSmall: true, kind: value, style: { marginBottom: 8 } }, label),
                React.createElement(Banner, { ...args, isSmall: true, kind: value, isCloseable: false, style: { marginBottom: 8 } },
                    label,
                    " -- No Close ",
                    String.fromCharCode(0x00d7)))))),
        _.map(kinds, ({ label, value }) => (React.createElement(React.Fragment, { key: `sm-outline-${label}` },
            React.createElement("div", null,
                React.createElement(Banner, { ...args, isSmall: true, kind: value, isFilled: false, style: { marginBottom: 8 } },
                    label,
                    " -- Outline Only")))))));
};
//# sourceMappingURL=Banner.stories.js.map