import React from 'react';
import PropTypes from 'prop-types';
import { StandardProps } from '../../util/component-types';
export interface IUnderlineProps extends StandardProps, React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement> {
    /** The first match of the given pattern has the underline style applied to it. */
    match?: string | RegExp;
}
export declare const Underline: {
    ({ className, children, match, ...passThroughs }: IUnderlineProps): React.ReactElement;
    displayName: string;
    peek: {
        description: string;
        categories: string[];
    };
    propTypes: {
        /**
            Appended to the component-specific class names set on the root element.
        */
        className: PropTypes.Requireable<string>;
        /**
            Text to be partially or fully underlined. If non-text is passed as
            children, it will not attempt to match the given pattern.
        */
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        /**
            The first match of the given pattern has the underline style applied to it.
        */
        match: PropTypes.Requireable<string | RegExp>;
    };
};
export default Underline;
//# sourceMappingURL=Underline.d.ts.map