import React from 'react';
import PropTypes from 'prop-types';
import { StandardProps } from '../../util/component-types';
/** Loading Message Icon */
export interface ILoadingMessageIconProps extends StandardProps {
    description?: string;
}
/** Loading Message Title */
export interface ILoadingMessageTitleProps extends StandardProps {
    description?: string;
}
/** Loading Message Body */
export interface ILoadingMessageBodyProps extends StandardProps {
    description?: string;
}
/** Loading Message */
export interface ILoadingMessageProps extends StandardProps, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {
    /** Custom Icon element (alias for `LoadingMessage.Icon`) */
    Icon?: React.ReactNode;
    /** Custom Title element (alias for `LoadingMessage.Title`) */
    Title?: React.ReactNode;
    /** Custom Body element (alias for `LoadingMessage.Body`) */
    Body?: React.ReactNode;
}
export declare const LoadingMessage: {
    (props: ILoadingMessageProps): React.ReactElement;
    Icon: {
        (_props: ILoadingMessageIconProps): null;
        displayName: string;
        peek: {
            description: string;
        };
        propName: string;
        propTypes: {
            description: PropTypes.Requireable<string>;
            children: PropTypes.Requireable<any>;
        };
    };
    Title: {
        (_props: ILoadingMessageTitleProps): null;
        displayName: string;
        peek: {
            description: string;
        };
        propName: string;
        propTypes: {
            description: PropTypes.Requireable<string>;
            children: PropTypes.Requireable<any>;
        };
    };
    Body: {
        (_props: ILoadingMessageBodyProps): null;
        displayName: string;
        peek: {
            description: string;
        };
        propName: string;
        propTypes: {
            description: PropTypes.Requireable<string>;
            children: PropTypes.Requireable<any>;
        };
    };
    _isPrivate: boolean;
    displayName: string;
    peek: {
        description: string;
        categories: string[];
        madeFrom: string[];
    };
    propTypes: {
        /**
            Class names that are appended to the defaults.
        */
        className: PropTypes.Requireable<string>;
        /**
            Any valid React children.
        */
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        /**
            Custom Icon element (alias for \`LoadingMessage.Icon\`)
        */
        Icon: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        /**
            Custom Title element (alias for \`LoadingMessage.Title\`)
        */
        Title: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        /**
            Custom Body element (alias for \`LoadingMessage.Body\`)
        */
        Body: PropTypes.Requireable<PropTypes.ReactNodeLike>;
    };
};
export default LoadingMessage;
//# sourceMappingURL=LoadingMessage.d.ts.map