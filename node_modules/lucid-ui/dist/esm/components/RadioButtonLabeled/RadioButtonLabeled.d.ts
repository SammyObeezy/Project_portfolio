import React from 'react';
import PropTypes from 'prop-types';
import { StandardProps } from '../../util/component-types';
import { IRadioButtonProps } from '../RadioButton/RadioButton';
export interface IRadioButtonLabeledLabelProps extends StandardProps, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {
    description?: string;
}
export interface IRadioButtonLabeledProps extends IRadioButtonProps {
    /** Child element whose children are used to identify the purpose of this
        radio button to the user. */
    Label?: string | (React.ReactNode & {
        props: IRadioButtonLabeledLabelProps;
    });
}
export declare const RadioButtonLabeled: {
    (props: IRadioButtonLabeledProps): React.ReactElement;
    displayName: string;
    defaultProps: {
        isDisabled: boolean;
        isSelected: boolean;
        onSelect: (...args: any[]) => void;
    };
    peek: {
        description: string;
        notes: {
            overview: string;
            intendedUse: string;
            technicalRecommendations: string;
        };
        categories: string[];
        extend: string;
        madeFrom: string[];
    };
    propTypes: {
        /**
            Appended to the component-specific class names set on the root element.
        */
        className: PropTypes.Requireable<string>;
        /**
            Passed through to the root element.
        */
        style: PropTypes.Requireable<object>;
        /**
            Child element whose children are used to identify the purpose of this
            radio button to the user.
        */
        Label: PropTypes.Requireable<any>;
        isDisabled: PropTypes.Requireable<boolean>;
        isSelected: PropTypes.Requireable<boolean>;
        name: PropTypes.Requireable<string>;
        onSelect: PropTypes.Requireable<(...args: any[]) => any>;
    };
    Label: {
        (_props: IRadioButtonLabeledLabelProps): null;
        displayName: string;
        peek: {
            description: string;
        };
        propName: string;
    };
};
export default RadioButtonLabeled;
//# sourceMappingURL=RadioButtonLabeled.d.ts.map