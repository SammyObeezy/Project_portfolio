import React, { useState } from 'react';
import Switch from './Switch';
export default {
    title: 'Controls/Switch',
    component: Switch,
    parameters: {
        docs: {
            description: {
                component: Switch.peek.description,
            },
        },
    },
    args: Switch.defaultProps,
};
export const Basic = (args) => {
    const [selected, setSelected] = useState(true);
    const handleSelect = () => {
        setSelected(!selected);
    };
    return React.createElement(Switch, { ...args, onSelect: handleSelect, isSelected: selected });
};
export const Selected = (args) => (React.createElement(Switch, { ...args, title: 'Selected', isSelected: true }));
export const Disabled = (args) => (React.createElement(Switch, { ...args, title: 'Disabled', isDisabled: true }));
export const DisabledSelected = (args) => (React.createElement(Switch, { ...args, title: 'Disabled and Selected', isSelected: true, isDisabled: true }));
export const IncludeExclude = (args) => (React.createElement(Switch, { ...args, title: 'Include/Exclude', isIncludeExclude: true }));
export const SelectedIncludeExclude = (args) => (React.createElement(Switch, { ...args, title: 'Selected Include/Exclude', isIncludeExclude: true, isSelected: true }));
export const DisabledIncludeExclude = (args) => (React.createElement(Switch, { ...args, title: 'Disabled Include/Exclude', isIncludeExclude: true, isDisabled: true }));
export const SelectedDisabledIncludeExclude = (args) => (React.createElement(Switch, { ...args, title: 'Selected and Disabled Include/Exclude', isIncludeExclude: true, isSelected: true, isDisabled: true }));
//# sourceMappingURL=Switch.stories.js.map