import React from 'react';
import PropTypes from 'prop-types';
import { StandardProps } from '../../util/component-types';
export interface ICellProps extends StandardProps {
    /** fill all twelve columns of the primary grid axis */
    isFull?: boolean;
    /** fill six columns of the primary grid axis */
    isHalf?: boolean;
    /** fill four columns of the primary grid axis */
    isThird?: boolean;
    /** fill three columns of the primary grid axis */
    isQuarter?: boolean;
    /** fill 2 columns of 12 */
    is2?: boolean;
    /** fill 3 columns of 12 */
    is3?: boolean;
    /** fill 4 columns of 12 */
    is4?: boolean;
    /** fill 5 columns of 12 */
    is5?: boolean;
    /** fill 6 columns of 12 */
    is6?: boolean;
    /** fill 7 columns of 12 */
    is7?: boolean;
    /** fill 8 columns of 12 */
    is8?: boolean;
    /** fill 9 columns of 12 */
    is9?: boolean;
    /** fill 10 columns of 12 */
    is10?: boolean;
    /** fill 11 columns of 12 */
    is11?: boolean;
    /** offset a grid cell by three columns */
    isOffsetQuarter?: boolean;
    /** offset a grid cell by four columns */
    isOffsetThird?: boolean;
    /** offset a grid cell by six columns */
    isOffsetHalf?: boolean;
}
export interface IGridProps extends StandardProps, React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement> {
    /** explicitly set the primary axis of the grid to Y */
    isVertical?: boolean;
    /** explicitly set the primary axis of the grid to X */
    isHorizontal?: boolean;
    /** a grid without padding separating grid cells */
    isGutterless?: boolean;
    /** Allow Grids to wrap multiple lines */
    isMultiline?: boolean;
    /** Any valid React component */
    children?: React.ReactNode;
}
export declare const Grid: {
    (props: IGridProps): React.ReactElement;
    Cell: {
        (_props: ICellProps): null;
        displayName: string;
        peek: {
            description: string;
        };
        propTypes: {
            /**
                fill all twelve columns of the primary grid axis
            */
            isFull: PropTypes.Requireable<boolean>;
            /**
                fill six columns of the primary grid axis
            */
            isHalf: PropTypes.Requireable<boolean>;
            /**
                fill four columns of the primary grid axis
            */
            isThird: PropTypes.Requireable<boolean>;
            /**
                fill three columns of the primary grid axis
            */
            isQuarter: PropTypes.Requireable<boolean>;
            /**
                fill 2 columns of 12
            */
            is2: PropTypes.Requireable<boolean>;
            /**
                fill 3 columns of 12
            */
            is3: PropTypes.Requireable<boolean>;
            /**
                fill 4 columns of 12
            */
            is4: PropTypes.Requireable<boolean>;
            /**
                fill 5 columns of 12
            */
            is5: PropTypes.Requireable<boolean>;
            /**
                fill 6 columns of 12
            */
            is6: PropTypes.Requireable<boolean>;
            /**
                fill 7 columns of 12
            */
            is7: PropTypes.Requireable<boolean>;
            /**
                fill 8 columns of 12
            */
            is8: PropTypes.Requireable<boolean>;
            /**
                fill 9 columns of 12
            */
            is9: PropTypes.Requireable<boolean>;
            /**
                fill 10 columns of 12
            */
            is10: PropTypes.Requireable<boolean>;
            /**
                fill 11 columns of 12
            */
            is11: PropTypes.Requireable<boolean>;
            /**
                offset a grid cell by three columns
                */
            isOffsetQuarter: PropTypes.Requireable<boolean>;
            /**
                offset a grid cell by four columns
            */
            isOffsetThird: PropTypes.Requireable<boolean>;
            /**
                offset a grid cell by six columns
            */
            isOffsetHalf: PropTypes.Requireable<boolean>;
        };
    };
    displayName: string;
    peek: {
        description: string;
        categories: string[];
    };
    propTypes: {
        /**
            Appended to the component-specific class names set on the root element.
        */
        className: PropTypes.Requireable<string>;
        /**
            explicitly set the primary axis of the grid to Y
        */
        isVertical: PropTypes.Requireable<boolean>;
        /**
            explicitly set the primary axis of the grid to X
        */
        isHorizontal: PropTypes.Requireable<boolean>;
        /**
            a grid without padding separating grid cells
        */
        isGutterless: PropTypes.Requireable<boolean>;
        /**
            Allow Grids to wrap multiple lines
        */
        isMultiline: PropTypes.Requireable<boolean>;
        /**
            Any valid React component
        */
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
    };
};
export default Grid;
//# sourceMappingURL=Grid.d.ts.map