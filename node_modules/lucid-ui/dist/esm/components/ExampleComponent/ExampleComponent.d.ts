import React from 'react';
import { FC, StandardProps } from '../../util/component-types';
export interface IExampleComponentProps extends StandardProps, React.DetailedHTMLProps<React.DOMAttributes<HTMLDivElement>, HTMLDivElement> {
    /**
     * Appended to the component-specific class names set on the root
     * element.
     */
    className?: string;
    /**
     * Any valid React children. This wraps your new component around whatever other React children consumers
     * of your component may choose to use. If consumers can not use any/all React children. Be sure to call
     * that out here.
     */
    children?: any;
    /**
     * Example of a boolean prop.
     * Used in this example to control an additional classname
     * `lucid-ExampleComponent-isX' on the root element.
     */
    isX?: boolean;
    /**
     * Example of a customizable component function. Always show the signature.
     *
     * Signature: `(item, { event, props }) => {}`
     */
    onX?: ({ event, props }: {
        event: React.MouseEvent;
        props: any;
    }) => void;
    /**
     * Passed through to the root element.
     */
    style?: object;
}
export declare const ExampleComponent: FC<IExampleComponentProps>;
export default ExampleComponent;
//# sourceMappingURL=ExampleComponent.d.ts.map