import React from 'react';
import Validation from './Validation';
import TextField from '../TextField/TextField';
export default {
    title: 'Helpers/Validation',
    component: Validation,
    parameters: {
        docs: {
            description: {
                component: Validation.peek.description,
            },
        },
    },
};
/* Basic */
export const Basic = (args) => {
    return (React.createElement("section", null,
        React.createElement("p", null, "Text field with Error prop (Method 1)"),
        React.createElement(Validation, { ...args, Error: 'Error One' },
            React.createElement(TextField, { value: 'Text Field Text' })),
        React.createElement("br", null),
        React.createElement("p", null, "Text field with Validation Error child component (Method 2)"),
        React.createElement(Validation, { ...args },
            React.createElement(Validation.Error, null,
                React.createElement("span", null, "Error Two")),
            React.createElement(TextField, { value: 'Text Field Text' })),
        React.createElement("br", null),
        React.createElement("p", null, "Text area with Error prop (Method 1)"),
        React.createElement(Validation, { ...args, Error: 'Error Three' },
            React.createElement(TextField, { isMultiLine: true, rows: 3, value: 'Text Area Text' })),
        React.createElement("br", null),
        React.createElement("p", null, "Text area with Validation Error child component (Method 2)"),
        React.createElement(Validation, { ...args, Error: 'Error FOUR TEST' },
            React.createElement(Validation.Error, null,
                React.createElement("span", null, "Error Four")),
            React.createElement(TextField, { isMultiLine: true, rows: 3, value: 'Text Area Text' }))));
};
//# sourceMappingURL=Validation.stories.js.map