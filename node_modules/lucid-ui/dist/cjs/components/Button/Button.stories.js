"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AllTypes = exports.Basic = void 0;
var lodash_1 = __importDefault(require("lodash"));
var react_1 = __importDefault(require("react"));
var CheckIcon_1 = __importDefault(require("../Icon/CheckIcon/CheckIcon"));
var Button_1 = require("./Button");
var kinds = [undefined, 'primary', 'link', 'danger', 'invisible'];
var sizes = [undefined, 'small', 'short', 'large'];
exports.default = {
    title: 'Controls/Button',
    component: Button_1.Button,
    parameters: {
        docs: {
            description: {
                component: Button_1.Button.peek.description,
            },
            inlineStories: true,
        },
    },
};
var Basic = function (args) { return react_1.default.createElement(Button_1.Button, __assign({}, args), "Button"); };
exports.Basic = Basic;
var AllTypes = function () { return (react_1.default.createElement("div", { style: {
        display: 'grid',
        gridGap: '10px',
        gridTemplateColumns: "repeat(".concat(kinds.length, ", auto)"),
        justifyItems: 'start',
        alignItems: 'center',
        gridAutoFlow: 'column',
    } }, lodash_1.default.map(sizes, function (size, sizeIndex) {
    return lodash_1.default.map(kinds, function (kind) { return (react_1.default.createElement(react_1.default.Fragment, { key: "".concat(size, "-").concat(kind) },
        react_1.default.createElement(Button_1.Button, { style: { gridColumn: sizeIndex + 1 }, size: size, kind: kind },
            size ? size : 'standard',
            " ",
            kind),
        react_1.default.createElement(Button_1.Button, { style: { gridColumn: sizeIndex + 1 }, size: size, kind: kind },
            react_1.default.createElement(CheckIcon_1.default, null),
            size ? size : 'standard',
            " ",
            kind),
        react_1.default.createElement(Button_1.Button, { isDisabled: true, style: { gridColumn: sizeIndex + 1 }, size: size, kind: kind },
            react_1.default.createElement(CheckIcon_1.default, null),
            "disabled ",
            size ? size : 'standard',
            " ",
            kind),
        react_1.default.createElement(Button_1.Button, { style: { gridColumn: sizeIndex + 1 }, size: size, kind: kind, hasOnlyIcon: true },
            react_1.default.createElement(CheckIcon_1.default, null)))); });
}))); };
exports.AllTypes = AllTypes;
//# sourceMappingURL=Button.stories.js.map