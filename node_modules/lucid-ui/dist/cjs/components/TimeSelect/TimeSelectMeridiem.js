"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var style_helpers_1 = require("../../util/style-helpers");
var SingleSelect_1 = __importDefault(require("../SingleSelect/SingleSelect"));
var TimeSelect_1 = require("./TimeSelect");
var cx = style_helpers_1.lucidClassNames.bind('&-TimeSelect');
var Option = SingleSelect_1.default.Option;
var TimeSelectMeridiem = function (_a) {
    var hour = _a.hour, meridiem = _a.meridiem, time = _a.time, isDisabled = _a.isDisabled, onChange = _a.onChange;
    var onMeridiemChange = (0, react_1.useCallback)(function (selectedIndex) {
        var nextMeridiem = selectedIndex === 0 ? TimeSelect_1.MeridiemType.AM : TimeSelect_1.MeridiemType.PM;
        if (meridiem === nextMeridiem) {
            return;
        }
        var updatedTime = new Date(time);
        if (nextMeridiem === TimeSelect_1.MeridiemType.AM) {
            updatedTime.setHours(hour === 12 ? 0 : hour);
        }
        else {
            updatedTime.setHours(hour === 12 ? hour : hour + 12);
        }
        onChange(updatedTime);
    }, [time, hour]);
    return (react_1.default.createElement(SingleSelect_1.default, { className: cx('&-meridiem'), isSelectionHighlighted: false, showIcon: false, selectedIndex: TimeSelect_1.MeridiemType.AM === meridiem ? 0 : 1, isInvisible: true, onSelect: onMeridiemChange, isDisabled: isDisabled, hasReset: false },
        react_1.default.createElement(Option, null, TimeSelect_1.MeridiemType.AM),
        react_1.default.createElement(Option, null, TimeSelect_1.MeridiemType.PM)));
};
exports.default = TimeSelectMeridiem;
//# sourceMappingURL=TimeSelectMeridiem.js.map