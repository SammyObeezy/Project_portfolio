"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.onToggle = void 0;
function onToggle(state) {
    return __assign(__assign({}, state), { isExpanded: !state.isExpanded });
}
exports.onToggle = onToggle;
// TODO:  why doesn't typscript catch this when we `import * as reducers` from
// this file.
//
// export function doesNotExist(state: IExpanderState): IExpanderState {
// 	return {
// 		...state,
// 		isExpanded: !state.isExpanded,
// 	};
// }
//# sourceMappingURL=Expander.reducers.js.map