"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HamburgerMenuIcon = exports.iconPropTypes = void 0;
var lodash_1 = __importDefault(require("lodash"));
var react_1 = __importDefault(require("react"));
var prop_types_1 = __importDefault(require("prop-types"));
var Icon_1 = __importDefault(require("../Icon"));
var style_helpers_1 = require("../../../util/style-helpers");
var cx = style_helpers_1.lucidClassNames.bind('&-HamburgerMenuIcon');
exports.iconPropTypes = {
    /** Sets the color of the Icon.  May not be applicable for icons that are tied
        to specific colors (e.g. DangerIcon). */
    color: prop_types_1.default.oneOf([
        'neutral-dark',
        'neutral-light',
        'neutral-extra-light',
        'primary',
        'white',
        'success',
        'warning',
        'secondary-one',
        'secondary-two',
        'secondary-three',
        'secondary-five',
    ]),
    /** Any valid SVG aspect ratio. */
    aspectRatio: prop_types_1.default.string,
    /** Adds styling that makes the icon appear clickable. */
    isClickable: prop_types_1.default.bool,
    /** Adds styling that makes the icon appear disabled.  Also forces
        isClickable to be false. */
    isDisabled: prop_types_1.default.bool,
    /** Called when the user clicks the \`Icon\`. Signature:
        \`({event, props}) => {}\` */
    onClick: prop_types_1.default.func,
    /** Called when the user clicks an active, clickable \`Icon\`. Signature:
        \`({event, props}) => {}\` */
    onSelect: prop_types_1.default.func,
    /** Any valid React children. */
    children: prop_types_1.default.element,
    /** Classes that are appended to the component defaults. This prop is run
        through the \`classnames\` library. */
    className: prop_types_1.default.string,
};
var HamburgerMenuIcon = function (_a) {
    var className = _a.className, passThroughs = __rest(_a, ["className"]);
    return (react_1.default.createElement(Icon_1.default
    // As size, height, width and viewbox are static for this icon, editing those props is disallowed
    , __assign({}, lodash_1.default.omit(passThroughs, [
        'initialState',
        'size',
        'height',
        'width',
        'viewbox',
    ]), { className: cx('&', className), width: 16, height: 16, viewBox: '0 0 16 16' }),
        react_1.default.createElement("path", { d: 'M.5 8h15M.5 13.5h15M.5 2.5h15' })));
};
exports.HamburgerMenuIcon = HamburgerMenuIcon;
exports.HamburgerMenuIcon.displayName = 'HamburgerMenuIcon';
exports.HamburgerMenuIcon.propTypes = exports.iconPropTypes;
exports.HamburgerMenuIcon.defaultProps = Icon_1.default.defaultProps;
exports.default = exports.HamburgerMenuIcon;
//# sourceMappingURL=HamburgerMenuIcon.js.map