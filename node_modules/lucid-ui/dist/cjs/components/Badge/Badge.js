"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Badge = exports.Type = exports.Kind = void 0;
var react_1 = __importDefault(require("react"));
var prop_types_1 = __importDefault(require("prop-types"));
var style_helpers_1 = require("../../util/style-helpers");
var cx = style_helpers_1.lucidClassNames.bind('&-Badge');
var badgePropTypes = {
    /** class names that are appended to the defaults */
    className: prop_types_1.default.string,
    /** any valid React children */
    children: prop_types_1.default.node,
    /** Style variations for the `Badge` */
    kind: prop_types_1.default.oneOf([
        'default',
        'primary',
        'success',
        'danger',
        'warning',
        'info',
        'dark',
    ]),
    /** Fill style variations for the `Badge` */
    type: prop_types_1.default.oneOf(['filled', 'stroke']),
};
var Kind;
(function (Kind) {
    Kind["default"] = "default";
    Kind["primary"] = "primary";
    Kind["success"] = "success";
    Kind["danger"] = "danger";
    Kind["warning"] = "warning";
    Kind["info"] = "info";
    Kind["dark"] = "dark";
})(Kind = exports.Kind || (exports.Kind = {}));
var Type;
(function (Type) {
    Type["filled"] = "filled";
    Type["stroke"] = "stroke";
})(Type = exports.Type || (exports.Type = {}));
var defaultProps = {
    kind: Kind.default,
    type: Type.filled,
};
var Badge = function (props) {
    var className = props.className, kind = props.kind, type = props.type, children = props.children, passThroughs = __rest(props, ["className", "kind", "type", "children"]);
    return (react_1.default.createElement("span", __assign({ className: cx('&', "&-".concat(kind), "&-".concat(type), className) }, passThroughs), children));
};
exports.Badge = Badge;
exports.Badge.defaultProps = defaultProps;
exports.Badge.displayName = 'Badge';
exports.Badge.peek = {
    description: "A quick utility component to create a badge around an element.",
    categories: ['visual design', 'icons'],
};
exports.Badge.propTypes = badgePropTypes;
exports.default = exports.Badge;
//# sourceMappingURL=Badge.js.map