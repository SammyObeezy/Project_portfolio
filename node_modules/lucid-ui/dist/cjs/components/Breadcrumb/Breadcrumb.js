"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Breadcrumb = void 0;
/* eslint-disable react/prop-types */
var lodash_1 = __importDefault(require("lodash"));
var react_1 = __importDefault(require("react"));
var prop_types_1 = __importDefault(require("prop-types"));
var style_helpers_1 = require("../../util/style-helpers");
var component_types_1 = require("../../util/component-types");
var cx = style_helpers_1.lucidClassNames.bind('&-Breadcrumb');
var any = prop_types_1.default.any, node = prop_types_1.default.node;
var BreadcrumbItem = function (_props) { return null; };
BreadcrumbItem.displayName = 'Breadcrumb.Item';
BreadcrumbItem.peek = {
    description: "Renders a `li`",
};
BreadcrumbItem.propName = 'Item';
BreadcrumbItem.propTypes = {
    children: node,
};
var Breadcrumb = function (props) {
    var className = props.className, passThroughs = __rest(props, ["className"]);
    var items = (0, component_types_1.findTypes)(props, exports.Breadcrumb.Item);
    var initialItems = lodash_1.default.initial(items);
    var lastItem = lodash_1.default.last(items);
    return (react_1.default.createElement("nav", __assign({}, passThroughs, { className: cx('&', className) }), !lodash_1.default.isEmpty(items) ? (react_1.default.createElement("ul", { className: cx('&-List') },
        lodash_1.default.map(initialItems, function (_a) {
            var props = _a.props, key = _a.key;
            return (react_1.default.createElement("li", __assign({}, props, { key: key, className: cx('&-Item', className) }),
                props.children,
                react_1.default.createElement("span", { className: cx('&-BreadcrumbSeparator') },
                    react_1.default.createElement("span", null),
                    react_1.default.createElement("span", null))));
        }),
        react_1.default.createElement("li", __assign({}, lastItem.props, { key: lastItem.key, className: cx('&-Item', lastItem.props.className) })))) : null));
};
exports.Breadcrumb = Breadcrumb;
exports.Breadcrumb.displayName = 'Breadcrumb';
exports.Breadcrumb.peek = {
    description: "A navigation component to show a user's place in a navigation hierarchy and provide links to return to higher points in that hierarchy.",
    categories: ['navigation'],
};
exports.Breadcrumb.propTypes = {
    /**
        All children should be \`Breadcrumb.Item\`s. Others are ignored.
    */
    children: node,
    /**
        Appended to the component-specific class names set on the root element.
        Value is run through the \`classnames\` library.
    */
    className: any,
    /**
        A child element that renders a \`li\`.
    */
    Item: node,
};
exports.Breadcrumb.Item = BreadcrumbItem;
exports.default = exports.Breadcrumb;
//# sourceMappingURL=Breadcrumb.js.map