"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WithChildren = exports.NoDragHandle = exports.Basic = void 0;
var react_1 = __importStar(require("react"));
var DraggableList_1 = __importDefault(require("./DraggableList"));
var CheckboxLabeled_1 = __importDefault(require("../CheckboxLabeled/CheckboxLabeled"));
exports.default = {
    title: 'Controls/DraggableList',
    component: DraggableList_1.default,
    parameters: {
        docs: {
            description: {
                component: DraggableList_1.default.peek.description,
            },
        },
    },
};
/* Basic */
var Basic = function (args) {
    var _a = (0, react_1.useState)([
        'Item One',
        'Item Two',
        'Item Three',
        'Item Four',
        'Item Five',
    ]), items = _a[0], setItems = _a[1];
    var handleDrop = function (_a) {
        var oldIndex = _a.oldIndex, newIndex = _a.newIndex;
        var updatedItems = items.filter(function (column, index) { return index !== oldIndex; });
        updatedItems.splice(newIndex, 0, items[oldIndex]);
        console.info(updatedItems);
        setItems(updatedItems);
    };
    return (react_1.default.createElement(DraggableList_1.default, __assign({}, args, { onDrop: handleDrop }), items.map(function (text) { return (react_1.default.createElement(DraggableList_1.default.Item, { key: text }, text)); })));
};
exports.Basic = Basic;
/* No Drag Handle */
var NoDragHandle = function (args) {
    var _a = (0, react_1.useState)([
        'Item One',
        'Item Two',
        'Item Three',
        'Item Four',
        'Item Five',
    ]), items = _a[0], setItems = _a[1];
    var handleDrop = function (_a) {
        var oldIndex = _a.oldIndex, newIndex = _a.newIndex;
        var updatedItems = items.filter(function (column, index) { return index !== oldIndex; });
        updatedItems.splice(newIndex, 0, items[oldIndex]);
        setItems(updatedItems);
    };
    return (react_1.default.createElement(DraggableList_1.default, __assign({}, args, { onDrop: handleDrop, hasDragHandle: false }), items.map(function (text) { return (react_1.default.createElement(DraggableList_1.default.Item, { key: text }, text)); })));
};
exports.NoDragHandle = NoDragHandle;
/* With Children */
var WithChildren = function (args) {
    var _a = (0, react_1.useState)([
        'Item One',
        'Item Two',
        'Item Three',
        'Item Four',
        'Item Five',
    ]), items = _a[0], setItems = _a[1];
    var handleDrop = function (_a) {
        var oldIndex = _a.oldIndex, newIndex = _a.newIndex;
        var updatedItems = items.filter(function (column, index) { return index !== oldIndex; });
        updatedItems.splice(newIndex, 0, items[oldIndex]);
        setItems(updatedItems);
    };
    return (react_1.default.createElement(DraggableList_1.default, __assign({}, args, { onDrop: handleDrop, style: { width: 500 } }), items.map(function (text) { return (react_1.default.createElement(DraggableList_1.default.Item, { key: text },
        react_1.default.createElement("div", { style: { display: 'flex', alignItems: 'center', height: 50 } },
            react_1.default.createElement(CheckboxLabeled_1.default, { Label: text })))); })));
};
exports.WithChildren = WithChildren;
//# sourceMappingURL=DraggableList.stories.js.map