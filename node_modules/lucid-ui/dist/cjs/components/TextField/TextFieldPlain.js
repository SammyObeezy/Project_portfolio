"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var style_helpers_1 = require("../../util/style-helpers");
var prop_types_1 = __importDefault(require("prop-types"));
var cx = style_helpers_1.lucidClassNames.bind('&-TextFieldPlain');
var TextFieldPlain = react_1.default.forwardRef(function (_a, ref) {
    var _b = _a.isDisabled, isDisabled = _b === void 0 ? false : _b, _c = _a.isMultiLine, isMultiLine = _c === void 0 ? false : _c, props = __rest(_a, ["isDisabled", "isMultiLine"]);
    var className = cx('&', {
        '&-is-disabled': isDisabled,
        '&-is-multi-line': isMultiLine,
        '&-is-single-line': !isMultiLine,
    }, props.className);
    if (isMultiLine) {
        return (react_1.default.createElement("textarea", __assign({ ref: ref }, props, { className: className })));
    }
    else {
        return (react_1.default.createElement("input", __assign({ ref: ref }, props, { className: className })));
    }
});
// @ts-ignore
TextFieldPlain.propTypes = {
    isDisabled: prop_types_1.default.bool,
    isMultiLine: prop_types_1.default.bool,
    className: prop_types_1.default.string,
};
TextFieldPlain.displayName = 'TextFieldPlain';
exports.default = TextFieldPlain;
//# sourceMappingURL=TextFieldPlain.js.map